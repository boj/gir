This README discusses how to build a module for the gir IRC bot.

=Structure

The module is expected to reside in the modules directory with a unique name,
and a file named main.py which contains a class with the same name as the
module directory.

Example:

./modules/example/main.py

class example:
	pass
	
The __init__ method can either receive an optional msg method object or nothing.
It is also expected to have a self.commands hash which maps the class
methods to actual chat triggers.
	
class example:

	def __init__(self, msg):
		self.msg = msg
		
		self.commands = {}
		
The commands hash should contain a unique key name (may include regex) with which will be checked
against as a chat command, and a value that maps to the internal method.

A * can be used as the catchall command, which will process all text that comes through
the channel the bot resides in.

Methods are required to receive 3 parameters, which in order are: channel, message, user

class example:

	def __init__(self, msg):
		self.msg = msg
		
		self.commands = {}
		self.commands["*"] = self.count_words
		self.commands["^!repeat"] = self.repeat
		
		self.word_count = 0
		
	def repeat(self, channel, message, user):
		self.msg(channel, "%s said: %s" % (user, message))
		
	def count_words(self, channel, message, user):
		self.word_count += len(message.split(" "))